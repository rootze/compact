[{"path":"https://smorabit.github.io/compact/articles/MPA_basics_microglia.html","id":"how-to-access-the-perturbed-expression-info","dir":"Articles","previous_headings":"","what":"How to access the perturbed expression info","title":"Module Perturbation Analysis","text":"running ModulePerturbation, created new gene expression matrix containing perturbed expression values cell-cell transition probability matrix. Plot change gene expression observed perturbed gene module M4 vs kME Plot violin plots individual genes interest Example 2: Upregulation module MG-M2 Example 3: Downregulation module MG-M2","code":"# access perturbed expression matrix using the name  # that you gave to the perturbation X <- GetAssayData(seurat_obj, assay = 'M4_down')  # to access the transition probability graph, use the  # name of the perturbation with _tp appended to the end graph_name <- paste0(perturbation_name, '_tp') tp <- Graphs(seurat_mg, graph_name)  # tp is a cells by cells matrix containing transition probabilities dim(tp) mod <- \"MG-M4\"  # get the kME for all the genes in module M4 hubs <- GetHubGenes(seurat_mg, n_hubs=Inf) %>%    subset(module == mod) hub_genes <- hubs %>% slice_max(kME, n=10) %>% .$gene_name hubs$hub <- ifelse(hubs$gene_name %in% hub_genes, 'hub', 'other')  # get the observed and perturbed expression matrices and compute the deltas X <- GetAssayData(seurat_mg, assay='RNA', slot='counts')[hubs$gene_name,] X_norm <- GetAssayData(seurat_mg, assay='RNA', slot='data')[hubs$gene_name,] X_per <- GetAssayData(seurat_mg, assay=perturbation_name, slot='counts')[hubs$gene_name,] delta <- X_per - X  # compute the average observed expression for each gene: avg_exp <- rowSums(X_norm) / ncol(X_norm)  # compute the mean delta value for each gene across all the cells: plot_df <- reshape2::melt(as.matrix(delta))  plot_df <- plot_df%>%    group_by(Var1) %>%    summarise(delta = mean(value)) %>%   dplyr::rename(gene_name = Var1)  # join this df with the kME df plot_df <- dplyr::left_join(   x = plot_df,   y = hubs,   by = 'gene_name' )  # add col for avg exp  plot_df$avg_exp <- avg_exp  # only label hub genes plot_df$label <- ifelse(plot_df$hub == 'hub', plot_df$gene_name, '')  # plot with ggplot p1 <- plot_df %>%    ggplot(aes(x = delta, y = kME, color = hub, size=avg_exp)) +    geom_point() +    geom_smooth(     data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME),     method = 'lm',     color = 'black'     ) +      ggpubr::stat_cor(       data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME)     ) +      geom_label_repel(       label=plot_df$label,        max.overlaps=Inf,       color='black',       size=3     ) +     theme(       axis.line.x = element_blank(),       axis.line.y = element_blank(),       panel.border = element_rect(color='black', fill=NA, linewidth=1),       panel.grid.major = element_line(linewidth=0.25, color='lightgrey')     ) +      xlab(bquote(\"Perturbation delta\")) +     ylab('kME') + labs(color=\"\")  # Similar plot but delta vs average expression in observed p2 <- plot_df %>%    ggplot(aes(x = delta, y = avg_exp, color = hub, size=kME)) +    geom_point() +    geom_smooth(     data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME),     method = 'lm',     color = 'black'     ) +       ggpubr::stat_cor(       data = plot_df, inherit.aes = FALSE,       aes(x=delta, y=avg_exp)     ) +      geom_label_repel(       label=plot_df$label,        max.overlaps=Inf,       color='black',       size=3     ) +     theme(       axis.line.x = element_blank(),       axis.line.y = element_blank(),       panel.border = element_rect(color='black', fill=NA, linewidth=1),       panel.grid.major = element_line(linewidth=0.25, color='lightgrey')     ) +      xlab(bquote(\"Perturbation delta\")) +     ylab('Average Expression') + labs(color=\"\")  pdf(paste0(fig_dir, 'kME_delta_', perturbation_name,'.pdf'), width=12, height=4) p1 + p2 dev.off() # group variable for vln plots group.by <- 'pseudotime_bins_10'  # one of the hub genes to be perturbed cur_gene <- 'CD163'  # another gene in module MG-M4 which has a high kME but is not a hub gene  cur_gene <- 'ACER3'  p1 <- VlnPlot(seurat_mg, features = cur_gene, pt.size=0.1, group.by = group.by, assay='RNA') +   NoLegend() + xlab('') + ylab('') +  ylim(0,5) +    theme(     axis.text.x = element_blank(),     plot.margin=margin(c(0,0,0,0))   )  p2 <- VlnPlot(seurat_mg, features = cur_gene, pt.size=0.1, group.by = group.by, assay=perturbation_name) +   NoLegend()  + ylab('') + ylim(0,5) + theme(     plot.margin=margin(c(0,0,0,0))) + ggtitle('') + xlab('Pseudotime -->')   pdf(paste0(fig_dir, 'vln_compare_', perturbation_name, '_', cur_gene, '.pdf'), width=6, height=4) print(p1 / p2) dev.off() # options: perturbation_name = 'M2_up' seurat_obj = seurat_mg mod = 'MG-M2' wgcna_name <- 'MG' n_hubs <- 10 perturb_dir <- 1 n_iters=3  # run a knock-in of the top 10 hub genes from MG-M2 # should take 2-3 min to run seurat_mg <- ModulePerturbation(     seurat_mg,      mod = mod,     perturb_dir = perturb_dir,     n_hubs=n_hubs,     perturbation_name = perturbation_name,     graph = 'RNA_nn',     wgcna_name = wgcna_name )  #-------------------------------------------------------------------------# # Plotting the result as a vector field plot on top of the UMAP # (need to make this into proprer functions later) #-------------------------------------------------------------------------#  # This function gives us the dataframe with vector coordinates  # (ars) and vector distances (arsd) vectors <- PerturbationVectors(   seurat_mg,   perturbation_name = perturbation_name ) ars <- vectors$ars  arsd <- vectors$arsd  # Get the UMAP embedding from the seurat object  # and subset to only keep cells that we have arrows for. emb <- seurat_mg@reductions$umap@cell.embeddings emb <- emb[rownames(ars),]  # run the velociraptor function to make a grid of arrows instead of one  # arrow per cell grid.df <- velociraptor::gridVectors(emb, arsd)   # compute the length of each arrow  distances <- sqrt(   ((grid.df$end.xd - grid.df$start.UMAP_1)^2) -    ((grid.df$end.yd - grid.df$start.UMAP_2)^2)  ) distances <- ifelse(is.nan(distances), 0, distances) grid.df$length <- distances  # make a dataframe to plot with ggplot plot_df <- as.data.frame(emb) plot_df$pseudotime <- seurat_mg@meta.data[rownames(emb), 'pseudotime']  # plot the scatter plot p <- ggplot(plot_df, aes(x=UMAP_1, y=UMAP_2, color=pseudotime)) +   geom_point(alpha=0.25, size=2) +   scale_color_gradientn(colors=plasma(256))    # add the arrows p <- p +   geom_segment(     data = grid.df,     inherit.aes=FALSE,     aes(       x=start.UMAP_1,        y=start.UMAP_2,        xend=end.xd,        yend=end.yd,       alpha= length     ),      arrow=grid::arrow(length=unit(0.1, \"cm\")), size=0.25   ) +   scale_alpha_continuous(range=c(0.8,1)) +   coord_equal() +   umap_theme() +   NoLegend() +   ggtitle(paste0(mod))  pdf(paste0(fig_dir, 'vectorfield_', perturbation_name, '.pdf'), width=6, height=3) p dev.off()   #-------------------------------------------------------------------------# # Make another vector field plot showing the arrows on each cell  #-------------------------------------------------------------------------#   # make a dataframe to plot with ggplot plot_df <- as.data.frame(emb) plot_df$pseudotime <- seurat_mg@meta.data[rownames(emb), 'pseudotime']  # plot the scatter plot p <- ggplot(plot_df, aes(x=UMAP_1, y=UMAP_2, color=pseudotime)) +   geom_point(alpha=0.25, size=1) +   scale_color_gradientn(colors=plasma(256))    # add the arrows p <- p +   geom_segment(     data = ars,     inherit.aes=FALSE,     aes(x=x0, y=y0, xend=x1, yend=y1), arrow=grid::arrow(length=unit(0.1, \"cm\")), size=0.1   ) +   scale_alpha_continuous(range=c(0.8,1)) +   coord_equal() +   umap_theme() +   NoLegend() +   ggtitle(paste0(mod))  pdf(paste0(fig_dir, 'vectorfield_', perturbation_name, '_all_arrows.pdf'), width=10, height=5) p dev.off() # options: perturbation_name = 'M2_down' seurat_obj = seurat_mg mod = 'MG-M2' wgcna_name <- 'MG' n_hubs <- 10 perturb_dir <- -1 n_iters=3  # run a knock-in of the top 10 hub genes from MG-M2 # should take 2-3 min to run seurat_mg <- ModulePerturbation(     seurat_mg,      mod = mod,     perturb_dir = perturb_dir,     n_hubs=n_hubs,     perturbation_name = perturbation_name,     graph = 'RNA_nn',     wgcna_name = wgcna_name )  #-------------------------------------------------------------------------# # Plotting the result as a vector field plot on top of the UMAP # (need to make this into proprer functions later) #-------------------------------------------------------------------------#  # This function gives us the dataframe with vector coordinates  # (ars) and vector distances (arsd) vectors <- PerturbationVectors(   seurat_mg,   perturbation_name = perturbation_name ) ars <- vectors$ars  arsd <- vectors$arsd  # Get the UMAP embedding from the seurat object  # and subset to only keep cells that we have arrows for. emb <- seurat_mg@reductions$umap@cell.embeddings emb <- emb[rownames(ars),]  # run the velociraptor function to make a grid of arrows instead of one  # arrow per cell grid.df <- velociraptor::gridVectors(emb, arsd)   # compute the length of each arrow  distances <- sqrt(   ((grid.df$end.xd - grid.df$start.UMAP_1)^2) -    ((grid.df$end.yd - grid.df$start.UMAP_2)^2)  ) distances <- ifelse(is.nan(distances), 0, distances) grid.df$length <- distances  # make a dataframe to plot with ggplot plot_df <- as.data.frame(emb) plot_df$pseudotime <- seurat_mg@meta.data[rownames(emb), 'pseudotime']  # plot the scatter plot p <- ggplot(plot_df, aes(x=UMAP_1, y=UMAP_2, color=pseudotime)) +   geom_point(alpha=0.25, size=2) +   scale_color_gradientn(colors=plasma(256))    # add the arrows p <- p +   geom_segment(     data = grid.df,     inherit.aes=FALSE,     aes(       x=start.UMAP_1,        y=start.UMAP_2,        xend=end.xd,        yend=end.yd,       alpha= length     ),      arrow=grid::arrow(length=unit(0.1, \"cm\")), size=0.25   ) +   scale_alpha_continuous(range=c(0.8,1)) +   coord_equal() +   umap_theme() +   NoLegend() +   ggtitle(paste0(mod))  pdf(paste0(fig_dir, 'vectorfield_', perturbation_name, '.pdf'), width=6, height=3) p dev.off()  #-------------------------------------------------------------------------# # Plotting the kME vs Delta #-------------------------------------------------------------------------#  # get the kME for all the genes in module M4 hubs <- GetHubGenes(seurat_mg, n_hubs=Inf) %>%    subset(module == mod) hub_genes <- hubs %>% slice_max(kME, n=10) %>% .$gene_name hubs$hub <- ifelse(hubs$gene_name %in% hub_genes, 'hub', 'other')  # get the observed and perturbed expression matrices and compute the deltas X <- GetAssayData(seurat_mg, assay='RNA', slot='counts')[hubs$gene_name,] X_norm <- GetAssayData(seurat_mg, assay='RNA', slot='data')[hubs$gene_name,] X_per <- GetAssayData(seurat_mg, assay=perturbation_name, slot='counts')[hubs$gene_name,] delta <- X_per - X  # compute the average observed expression for each gene: avg_exp <- rowSums(X_norm) / ncol(X_norm)  # compute the mean delta value for each gene across all the cells: plot_df <- reshape2::melt(as.matrix(delta))  plot_df <- plot_df%>%    group_by(Var1) %>%    summarise(delta = mean(value)) %>%   dplyr::rename(gene_name = Var1)  # join this df with the kME df plot_df <- dplyr::left_join(   x = plot_df,   y = hubs,   by = 'gene_name' )  # add col for avg exp  plot_df$avg_exp <- avg_exp  # only label hub genes plot_df$label <- ifelse(plot_df$hub == 'hub', plot_df$gene_name, '')  # plot with ggplot p1 <- plot_df %>%    ggplot(aes(x = delta, y = kME, color = hub, size=avg_exp)) +    geom_point() +    geom_smooth(     data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME),     method = 'lm',     color = 'black'     ) +      ggpubr::stat_cor(       data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME)     ) +      geom_label_repel(       label=plot_df$label,        max.overlaps=Inf,       color='black',       size=3     ) +     theme(       axis.line.x = element_blank(),       axis.line.y = element_blank(),       panel.border = element_rect(color='black', fill=NA, linewidth=1),       panel.grid.major = element_line(linewidth=0.25, color='lightgrey')     ) +      xlab(bquote(\"Perturbation delta\")) +     ylab('kME') + labs(color=\"\")  # Similar plot but delta vs average expression in observed p2 <- plot_df %>%    ggplot(aes(x = delta, y = avg_exp, color = hub, size=kME)) +    geom_point() +    geom_smooth(     data = plot_df, inherit.aes = FALSE,     aes(x=delta, y=kME),     method = 'lm',     color = 'black'     ) +       ggpubr::stat_cor(       data = plot_df, inherit.aes = FALSE,       aes(x=delta, y=avg_exp)     ) +      geom_label_repel(       label=plot_df$label,        max.overlaps=Inf,       color='black',       size=3     ) +     theme(       axis.line.x = element_blank(),       axis.line.y = element_blank(),       panel.border = element_rect(color='black', fill=NA, linewidth=1),       panel.grid.major = element_line(linewidth=0.25, color='lightgrey')     ) +      xlab(bquote(\"Perturbation delta\")) +     ylab('Average Expression') + labs(color=\"\")  pdf(paste0(fig_dir, 'kME_delta_', perturbation_name,'.pdf'), width=12, height=4) p1 + p2 dev.off()"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"co-expression module perturbation analysis","text":"tutorial covers basics using compact perform module perturbation analysis co-expression network/module single-cell data. tutorial covers basics using compact perform -silico pertubation experiments single-cell transcriptomics data. tutorial use integrated single-nucleus RNA-seq dataset microglia three different studies Alzheimer’s disease, described previously hdWGCNA paper. -silico perturbations demonstrate tutorial based gene co-expression modules, unbiased clusters genes highly co-expressed gene-gene co-expression network. order run pertubations, first need perform co-expression network analysis group genes modules running hdWGCNA. already run tutorial microglia dataset, identified four gene modules.","code":""},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"load-the-dataset","dir":"Articles","previous_headings":"","what":"Load the dataset","title":"co-expression module perturbation analysis","text":"First load required R libraries tutorial dataset. Next visualize clusters dataset UMAP plot.","code":"# Get the UMAP embedding from the seurat object emb <- Reductions(seurat_obj, 'umap')@cell.embeddings  # make a dataframe to plot with ggplot plot_df <- as.data.frame(emb) plot_df$functional_anno <- seurat_obj$functional_anno  # plot with ggplot p <- plot_df %>%   ggplot(aes(x=UMAP_1, y=UMAP_2, color=functional_anno)) +   scale_color_viridis_d(option = \"plasma\") +     rasterise(geom_point(size=2, alpha=0.5), dpi = 300) +   ggtitle(\"microglia functional_anno\") +   hdWGCNA::umap_theme()  p"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"perform-in-silico-module-perturbation","dir":"Articles","previous_headings":"","what":"Perform in-silico module perturbation","title":"co-expression module perturbation analysis","text":"example, perform -silico knock-one microglia co-expression modules. First, let’s look expression level modules (module eigengene).  expression microglia module M4 concentrated end trajectory, within activated microglia population. Next perform knock-experiment module, predict perturbation alter cellular states.","code":"# add module expression levels (MEs) to the seurat metadata MEs <- GetMEs(seurat_obj) meta <- seurat_obj@meta.data seurat_obj@meta.data <- cbind(meta, MEs)  # dotplot p <- DotPlot(     seurat_obj, features=c('MG-M4', 'MG-M1', 'MG-M3', 'MG-M2'),      group.by='functional_anno' ) +     coord_flip() +      scale_color_gradient2(high='black', mid='grey75', low='grey99') +     theme(         axis.text.x = element_blank(),         axis.ticks.x = element_blank()     ) + ylab('Trajectory →') + xlab('') + NoLegend()  p"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"apply-a-knock-down-using-moduleperturbation","dir":"Articles","previous_headings":"Perform in-silico module perturbation","what":"Apply a knock-down using ModulePerturbation","title":"co-expression module perturbation analysis","text":"use function ModulePerturbation apply -silico knock-module MG-M4. function consists three main steps, conveniently included function. Apply primary perturbation hub genes co-expression module. hub gene, perform zero-inflated count data regression model observed gene expression distribution. simulate perturbation sampling distribution, adding subtracting sampled counts observed counts knock-knock-respectively. Apply secondary perturbation genes co-expression module. primary perturbation propagated genes exploiting co-expression network structure. Genes stronger connections network exhibit stronger perturbation. Calculate cell-cell transition probabilities based observed gene expression matrix perturbed gene expression matrix. analysis perform primary perturbation top 10 hub genes module MG-M4. Let’s check genes perturbing. main ouputs function “perturbed” gene expression matrix, cell-cell transition matrix, can access Seurat object using following code. Next, let’s compare observed perturbed gene expression distributions one MG-M4 hub genes, TMEM163. expect pertubed matrix, expression TMEM163 lower observed matrix.","code":"hub_genes <- GetHubGenes(seurat_obj, n_hubs=10) %>% subset(module == 'MG-M4') hub_genes$gene_name [1] \"PTPN2\"   \"SLC11A1\" \"ACSL1\"   \"SPATA6\"  \"TBC1D14\" \"TMEM163\" \"ERC2\"    [8] \"DPYD\"    \"CD163\"   \"TLR2\" # provide a name for the perturbation, which will be stored in the Seurat object perturbation_name <- 'M4_down'  # run a knock-down of the top 10 hub genes from MG-M4 # should take 2-3 min to run seurat_obj <- ModulePerturbation(     seurat_obj,     mod = \"MG-M4\",     perturb_dir = -1, # negative indicates knock-down, positive indicates knock-in     perturbation_name = perturbation_name,     graph = 'RNA_nn',      n_hubs = 10 ) # get the perturbed expression matrix X_per <- GetAssayData(   seurat_obj, assay=perturbation_name,   layer='counts'  )  # get the cell-cell transition matrix tp <- Graphs(seurat_obj, paste0(perturbation_name, '_tp')) # Generate 10 colors from the plasma palette plasma_colors <- viridis::viridis(10, option = \"plasma\")  # group variable for vln plots group.by <- 'functional_anno'  # one of the hub genes to be perturbed cur_gene <- 'TMEM163'  p1 <- VlnPlot(seurat_obj, features = cur_gene, pt.size=0.1, group.by = group.by, assay='RNA') +   scale_fill_manual(values = plasma_colors) +  # Use the extracted colors here   NoLegend() + xlab('') + ylab('') +  ylim(0,5) +   theme(     axis.text.x = element_blank(),     plot.margin=margin(c(0,0,0,0))   )  p2 <- VlnPlot(seurat_obj, features = cur_gene, pt.size=0.1, group.by = group.by, assay=perturbation_name) +   scale_fill_manual(values = plasma_colors) +  # Use the extracted colors here   NoLegend()  + ylab('') + ylim(0,5) + theme(     plot.margin=margin(c(0,0,0,0))) + ggtitle('') + xlab('Functional Annotation / Pseudotime -->')   p1 / p2"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"visualize-predicted-cell-transitions-after-perturbation","dir":"Articles","previous_headings":"Perform in-silico module perturbation","what":"Visualize predicted cell transitions after perturbation","title":"co-expression module perturbation analysis","text":"visualize predicted cell-cell transitions -silico knock-MG-M4. Similar methods like RNA Velocity CellOracle, visualize inferred transitions vector field overlaid dimensionality reduction. include function PlotTransitionVectors generate plot. function leverages code R package velocyto.R, however future update like remove dependency since package can difficult install machines.  generate vector field, cell-cell transition probabilities computed perturbation used infer cells similar expression profiles, vectors shown cells. order avoid overcrowding plot, vectors averaged grid rather showing vector cell.","code":"p <- PlotTransitionVectors(     seurat_obj,     perturbation_name = perturbation_name,     reduction = 'umap',     color.by='pseudotime',     grid_resolution = 25  )  p <- p +      NoLegend() +      scale_color_gradientn(colors=viridis::plasma(256)) +      coord_equal() +      ggtitle(perturbation_name)  p"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"compare-cell-state-similarity-before-and-after-perturbation","dir":"Articles","previous_headings":"Perform in-silico module perturbation","what":"Compare cell state similarity before and after perturbation","title":"co-expression module perturbation analysis","text":"analyze effect perturbation, compute E-distance different functional annotations within original perturbed Seurat objects. E-distance helps assess similarity different functional cell states present dataset. First, calculate energy distance clusters observed gene expression matrix using function ComputeDistance. Next, perform similar analysis perturbed Seurat assay ‘M4_down’ Run PCA perturbed data please remember change ‘reduction.name’ Compute similarity distance perturbed data visualize similarity distance matrices original perturbed data using heatmap. allow us compare functional clusters’ similarity difference perturbation  can see distance smaller heatmap right, indicates activated cells become transcriptomically similar homeostatic cells -silco perturbation.","code":"# Calculate similarity distance for original scRNA-seq data, method selected \"edist\" - energy distance df_edist_original <- ComputeDistance(   seurat_obj,    groupby = 'functional_anno',    reduction = 'pca',    method = \"edist\",    verbose = TRUE   )  # # Define your custom order custom_order <- levels(seurat_obj$functional_anno)  # Rearrange rows and columns of df_edist_observed based on the custom order df_edist_original_reordered <- df_edist_original[custom_order, custom_order]  # View the reordered dataframe df_edist_original_reordered #               Homeostasis Surveillance1 Surveillance2 Surveillance3 # Homeostasis      0.000000     10.140967     17.220091    12.1832043 # Surveillance1   10.140967      0.000000      2.866413     3.1124290 # Surveillance2   17.220091      2.866413      0.000000     1.2850047 # Surveillance3   12.183204      3.112429      1.285005     0.0000000 # Surveillance4    8.723064      4.462216      3.529919     0.7661988 # Surveillance5    5.735601      7.660914      8.219343     3.6764471 # Activated1      13.835812     10.549585      7.522241     3.5081678 # Activated2      22.369534     18.084185     13.030198     8.7718675 # Activated3      17.792197     20.061153     17.297088    11.6027919 # Phagocytosis    26.392094     29.687218     25.688176    19.5139817 #               Surveillance4 Surveillance5 Activated1 Activated2 Activated3 # Homeostasis       8.7230645      5.735601  13.835812  22.369534  17.792197 # Surveillance1     4.4622158      7.660914  10.549585  18.084185  20.061153 # Surveillance2     3.5299193      8.219343   7.522241  13.030198  17.297088 # Surveillance3     0.7661988      3.676447   3.508168   8.771868  11.602792 # Surveillance4     0.0000000      1.301993   1.908912   6.800320   8.081606 # Surveillance5     1.3019930      0.000000   2.087510   6.593177   5.495311 # Activated1        1.9089124      2.087510   0.000000   2.014579   3.216930 # Activated2        6.8003204      6.593177   2.014579   0.000000   1.950235 # Activated3        8.0816058      5.495311   3.216930   1.950235   0.000000 # Phagocytosis     15.4674423     12.337110   8.521408   5.171625   2.154714 #               Phagocytosis # Homeostasis      26.392094 # Surveillance1    29.687218 # Surveillance2    25.688176 # Surveillance3    19.513982 # Surveillance4    15.467442 # Surveillance5    12.337110 # Activated1        8.521408 # Activated2        5.171625 # Activated3        2.154714 # Phagocytosis      0.000000 # Set the default assay to the perturbed assay and prepare the data seurat_obj_perturbed <- seurat_obj # set up a new seurat object to avoid confusion  DefaultAssay(seurat_obj_perturbed) <- \"M4_down\"  seurat_obj_perturbed <- FindVariableFeatures(seurat_obj_perturbed, selection.method = \"vst\", nfeatures = 2000) seurat_obj_perturbed <- ScaleData(seurat_obj_perturbed) seurat_obj_perturbed <- RunPCA(seurat_obj_perturbed, features = VariableFeatures(object = seurat_obj_perturbed), reduction.name = \"M4_down_pca\")  seurat_obj_perturbed@reductions > seurat_obj_perturbed@reductions $umap A dimensional reduction object with key UMAP_  Number of dimensions: 2  Projected dimensional reduction calculated:  FALSE  Jackstraw run: FALSE  Computed using assay: RNA  $pca A dimensional reduction object with key PC_  Number of dimensions: 50  Projected dimensional reduction calculated:  FALSE  Jackstraw run: FALSE  Computed using assay: RNA  $harmony A dimensional reduction object with key harmony_  Number of dimensions: 50  Projected dimensional reduction calculated:  TRUE  Jackstraw run: FALSE  Computed using assay: RNA  $M4_down_pca A dimensional reduction object with key m4_down_pca_  Number of dimensions: 50  Projected dimensional reduction calculated:  FALSE  Jackstraw run: FALSE  Computed using assay: M4_down # ComputeDistance df_edist_perturbed <- ComputeDistance(seurat_obj_perturbed, groupby = 'functional_anno', reduction = 'M4_down_pca', method = \"edist\", verbose = TRUE)  df_edist_perturbed   # Rearrange rows and columns of df_edist_observed based on the custom order df_edist_perturbed_reordered <- df_edist_perturbed[custom_order, custom_order]  # View the reordered dataframe df_edist_perturbed_reordered > df_edist_perturbed               Phagocytosis Surveillance3 Surveillance2 Activated1 Surveillance1 Phagocytosis     0.0000000     4.1887166     5.3468811  1.9114647      6.367927 Surveillance3    4.1887166     0.0000000     0.3544971  0.8140641      0.702068 Surveillance2    5.3468811     0.3544971     0.0000000  1.6971191      0.444851 Activated1       1.9114647     0.8140641     1.6971191  0.0000000      2.354567 Surveillance1    6.3679270     0.7020680     0.4448510  2.3545673      0.000000 Surveillance4    3.3193247     0.2185912     0.8524824  0.3940233      1.108151 Activated2       1.6043523     1.2675249     2.0982363  0.3861708      2.864140 Surveillance5    2.9806149     0.5994561     1.5770397  0.4120399      1.629711 Homeostasis      5.0451679     1.9123500     2.8172922  2.0402917      1.892958 Activated3       0.9335111     1.9314490     3.0544205  0.5010339      3.670300               Surveillance4 Activated2 Surveillance5 Homeostasis Activated3 Phagocytosis      3.3193247  1.6043523     2.9806149    5.045168  0.9335111 Surveillance3     0.2185912  1.2675249     0.5994561    1.912350  1.9314490 Surveillance2     0.8524824  2.0982363     1.5770397    2.817292  3.0544205 Activated1        0.3940233  0.3861708     0.4120399    2.040292  0.5010339 Surveillance1     1.1081507  2.8641397     1.6297111    1.892958  3.6702999 Surveillance4     0.0000000  0.9458629     0.2065312    1.271465  1.2788325 Activated2        0.9458629  0.0000000     0.8679631    2.958652  0.3551624 Surveillance5     0.2065312  0.8679631     0.0000000    1.029319  0.9134280 Homeostasis       1.2714649  2.9586525     1.0293188    0.000000  2.7488030 Activated3        1.2788325  0.3551624     0.9134280    2.748803  0.0000000 #--------------------------- # NOTE plot heatmap  library(ggplot2) library(reshape2) library(scales) library(patchwork)  # For arranging plots side by side   # # Example usage with default color palette order_level <- custom_order  # HeatmapDistance() ht <- HeatmapDistance(df_original = df_edist_original, df_perturbed = df_edist_perturbed, custom_order = order_level)  ht"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"apply-a-knock-in","dir":"Articles","previous_headings":"Perform in-silico module perturbation","what":"Apply a knock-in","title":"co-expression module perturbation analysis","text":"step, simulate another -silico perturbation ModulePerturbation -regulate co-expression module, visualize resulting transition vector field PlotTransitionVectors. difference set perturb_dir=1 -regulation whereas previously perturb_dir=-1 -regulation.  expected, can broadly see transition vectors indicate opposite affects knock-knock-predicted cell states.","code":"# apply the up-regulation of module M4 perturbation_name <- 'M4_up' seurat_obj <- ModulePerturbation(     seurat_obj,     mod = \"MG-M4\",     perturb_dir = 1, # positive value indicates knock-in, all      perturbation_name = perturbation_name,     graph = 'RNA_nn',      n_hubs = 10,  )  # plot the transition vectors p1 <- PlotTransitionVectors(     seurat_obj,     perturbation_name = \"M4_up\",     reduction = 'umap',     color.by='pseudotime',     grid_resolution = 25,     point_size=2 ) +  NoLegend() +  scale_color_gradientn(colors=viridis::plasma(256)) +  coord_equal() +  ggtitle(\"M4 knock-in\")  # plot the transition vectors p2 <- PlotTransitionVectors(     seurat_obj,     perturbation_name = \"M4_down\",     reduction = 'umap',     color.by='pseudotime',     grid_resolution = 25,     point_size=2 ) +  NoLegend() +  scale_color_gradientn(colors=viridis::plasma(256)) +  coord_equal() +  ggtitle(\"M4 knock-down\")  p1 | p2"},{"path":"https://smorabit.github.io/compact/articles/basic_tutorial.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"co-expression module perturbation analysis","text":"demonstrated basics compact method apply -silico knockdown microglial activation module M4. -regulating module, method predicted cells shift homeostatic-like state.","code":""},{"path":"https://smorabit.github.io/compact/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Morabito. Author, maintainer. Zechuan Shi. Author. Swarup Lab. Funder.","code":""},{"path":"https://smorabit.github.io/compact/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morabito S, Shi Z (2024). compact: compact. R package version 0.0.1, https://smorabit.github.io/COMPACT/.","code":"@Manual{,   title = {compact: compact},   author = {Sam Morabito and Zechuan Shi},   year = {2024},   note = {R package version 0.0.1},   url = {https://smorabit.github.io/COMPACT/}, }"},{"path":"https://smorabit.github.io/compact/index.html","id":"compact-co-expression-module-perturbation-analysis","dir":"","previous_headings":"","what":"compact: co-expression module perturbation analysis","title":"compact","text":"compact framework performing CO-expression Module Perturbation Analysis Cellular Transcriptomes. Building previous method hdWGCNA, compact applies direct perturbations co-expression network hub genes, uses network structure propagate perturbation signal linked genes network. framework highly flexible perform knock-, knock-, knock-perturbations different networks sets genes different cell lineages, allowing researchers explore wide range strategies mimicking various experimental conditions interventions. compact active development, currently alpha version. means many features final package missing, current features subject change throughout development. first major release compact coincide forthcoming publication. get started, please install package visit co-expression module perturbation analysis tutorial.","code":""},{"path":"https://smorabit.github.io/compact/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"compact","text":"recommend creating R conda environment environment compact. Install required packages R","code":"conda create -n compact -c conda-forge r-base r-essentials conda activate compact # install BiocManager install.packages(\"BiocManager\") BiocManager::install()  # install latest version of Seurat from CRAN install.packages(\"Seurat\")  # install devtools BiocManager::install(\"devtools\")  # install hdWGCNA, velocyto.R, and compact from devtools devtools::install_github('smorabit/hdWGCNA', ref='dev') devtools::install_github(\"velocyto-team/velocyto.R\") devtools::install_github('smorabit/compact')"},{"path":"https://smorabit.github.io/compact/reference/ApplyPerturbation.html","id":null,"dir":"Reference","previous_headings":"","what":"ApplyPerturbation — ApplyPerturbation","title":"ApplyPerturbation — ApplyPerturbation","text":"function applies -silico perturbation selected features Seurat object.","code":""},{"path":"https://smorabit.github.io/compact/reference/ApplyPerturbation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ApplyPerturbation — ApplyPerturbation","text":"","code":"ApplyPerturbation(   seurat_obj,   exp,   features,   perturb_dir,   cells_use = NULL,   layer = \"counts\",   slot = \"counts\",   assay = \"RNA\" )"},{"path":"https://smorabit.github.io/compact/reference/ApplyPerturbation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ApplyPerturbation — ApplyPerturbation","text":"seurat_obj Seurat object exp features cells matrix containing observed expression matrix. features selected features apply perturbation . perturb_dir numeric determining type perturbation apply. Negative values knock-, positive knock-, 0 knock-. slot Slot extract data aggregation. Default = 'counts' assay Assay seurat_obj containing expression information.","code":""},{"path":"https://smorabit.github.io/compact/reference/ApplyPerturbation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ApplyPerturbation — ApplyPerturbation","text":"dgCMatrix object containing updated expression matrix applied perturbations","code":""},{"path":"https://smorabit.github.io/compact/reference/ApplyPropagation.html","id":null,"dir":"Reference","previous_headings":"","what":"ApplyPropagation — ApplyPropagation","title":"ApplyPropagation — ApplyPropagation","text":"function applies -silico perturbation selected features Seurat object.","code":""},{"path":"https://smorabit.github.io/compact/reference/ApplyPropagation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ApplyPropagation — ApplyPropagation","text":"","code":"ApplyPropagation(   seurat_obj,   exp,   exp_per,   network,   perturb_dir = perturb_dir,   n_iters = 3,   delta_scale = 0.2 )"},{"path":"https://smorabit.github.io/compact/reference/ApplyPropagation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ApplyPropagation — ApplyPropagation","text":"seurat_obj Seurat object exp features cells matrix containing observed expression matrix. exp_per features cells matrix containing perturbation results ApplyPerturbation. network gene-gene network apply signal propagation. n_iters number times apply signal propagation.","code":""},{"path":"https://smorabit.github.io/compact/reference/ApplyPropagation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ApplyPropagation — ApplyPropagation","text":"dgCMatrix object containing updated expression matrix applied perturbations","code":""},{"path":"https://smorabit.github.io/compact/reference/ComputeDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"ComputeDistance — ComputeDistance","title":"ComputeDistance — ComputeDistance","text":"Computes either Euclidean E-distance groups Seurat object, depending chosen method.","code":""},{"path":"https://smorabit.github.io/compact/reference/ComputeDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ComputeDistance — ComputeDistance","text":"","code":"ComputeDistance(   seurat_object,   groupby,   reduction,   method = \"edist\",   verbose = TRUE )"},{"path":"https://smorabit.github.io/compact/reference/ComputeDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ComputeDistance — ComputeDistance","text":"seurat_object object class Seurat. groupby object class character. Points column Seurat object's meta data contains group labels. reduction object class character. reduction / embedding seurat_object used compute distance. Can \"pca\", \"harmony\", linear dimensionality reduction. method object class character. distance calculation method, either \"euclidean\" \"edist\". verbose object class logical. TRUE, prints messages. Default TRUE.","code":""},{"path":"https://smorabit.github.io/compact/reference/ComputeDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ComputeDistance — ComputeDistance","text":"Returns object class data.frame containing distance pair groups.","code":""},{"path":[]},{"path":"https://smorabit.github.io/compact/reference/EnergyTest.html","id":null,"dir":"Reference","previous_headings":"","what":"EnergyTest — EnergyTest","title":"EnergyTest — EnergyTest","text":"Performs E-testing Seurat object. Computes E-test statistics group Seurat object, using E-distance space given reduction group defined control.","code":""},{"path":"https://smorabit.github.io/compact/reference/EnergyTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EnergyTest — EnergyTest","text":"","code":"EnergyTest(   seurat_object,   groupby,   control,   reduction = \"pca\",   verbose = TRUE,   permutations = 1000 )"},{"path":"https://smorabit.github.io/compact/reference/EnergyTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EnergyTest — EnergyTest","text":"seurat_object object class Seurat. groupby object class character. Points column Seurat object's meta data contains group labels. control object class character. group used control statistical comparison. reduction object class character. reduction / embedding seurat_object used compute E-distance . Can \"pca\", \"harmony\", linear dimensionality reduction. verbose object class logical. TRUE, prints messages. Default TRUE. permutations object class integer. number permutations used compute p-value. Default 1000.","code":""},{"path":"https://smorabit.github.io/compact/reference/EnergyTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EnergyTest — EnergyTest","text":"Returns object class data.frame. group contains E-test p-value E-distance control group.","code":""},{"path":"https://smorabit.github.io/compact/reference/EnergyTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EnergyTest — EnergyTest","text":"","code":"# Add some code illustrating how to use the function"},{"path":"https://smorabit.github.io/compact/reference/HeatmapDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","title":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","text":"HeatmapDistance Generate Heatmaps Original Perturbed Matrices function generates two heatmaps two matrices (original perturbed) displays side side color scale.","code":""},{"path":"https://smorabit.github.io/compact/reference/HeatmapDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","text":"","code":"HeatmapDistance(   df_original,   df_perturbed,   custom_palette = NULL,   title_original = \"Original Assay Cluster Similarity Distance\",   title_perturbed = \"Perturbed Assay Cluster Similarity Distance\",   custom_order = NULL )"},{"path":"https://smorabit.github.io/compact/reference/HeatmapDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","text":"df_original numeric matrix representing original (unperturbed) data. df_perturbed numeric matrix representing perturbed data. custom_palette vector colors define color palette. Defaults red/blue gradient. title_original title original heatmap. Defaults \"Original Assay Cluster Similarity Distance\". title_perturbed title perturbed heatmap. Defaults \"Perturbed Assay Cluster Similarity Distance\". custom_order character vector specifying order clusters x y axes.","code":""},{"path":"https://smorabit.github.io/compact/reference/HeatmapDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","text":"patchwork object combining two heatmaps.","code":""},{"path":"https://smorabit.github.io/compact/reference/HeatmapDistance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HeatmapDistance Generate Heatmaps for Original and Perturbed Matrices This function generates two heatmaps from two matrices (original and perturbed) and displays them side by side on the same color scale. — HeatmapDistance","text":"","code":"p <- HeatmapDistance(df_edist_observed, df_edist_perturbed) # , custom_order = custom_order #> Error: object 'df_edist_observed' not found"},{"path":"https://smorabit.github.io/compact/reference/ModelZINB.html","id":null,"dir":"Reference","previous_headings":"","what":"ModelZINB — ModelZINB","title":"ModelZINB — ModelZINB","text":"function models expression selected feature zero-inflated negative binomial (ZINB) distribution.","code":""},{"path":"https://smorabit.github.io/compact/reference/ModelZINB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ModelZINB — ModelZINB","text":"","code":"ModelZINB(   seurat_obj,   feature,   cells_use = NULL,   layer = \"counts\",   slot = \"counts\" )"},{"path":"https://smorabit.github.io/compact/reference/ModelZINB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModelZINB — ModelZINB","text":"seurat_obj Seurat object feature List cell barcodes Seurat object slot Slot extract data aggregation. Default = 'counts'","code":""},{"path":"https://smorabit.github.io/compact/reference/ModelZINB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ModelZINB — ModelZINB","text":"zero-inflated negative binomial model fit observed data selected feature.","code":""},{"path":"https://smorabit.github.io/compact/reference/ModelZINB.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ModelZINB — ModelZINB","text":"ModelZINB internal helper function calls zeroinfl pscl package model expression selected feature.","code":""},{"path":"https://smorabit.github.io/compact/reference/ModulePerturbation.html","id":null,"dir":"Reference","previous_headings":"","what":"ModulePerturbation — ModulePerturbation","title":"ModulePerturbation — ModulePerturbation","text":"function enables -silico gene expression perturbation analysis using co-expression network.","code":""},{"path":"https://smorabit.github.io/compact/reference/ModulePerturbation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ModulePerturbation — ModulePerturbation","text":"","code":"ModulePerturbation(   seurat_obj,   mod,   perturb_dir,   perturbation_name,   graph,   group.by = NULL,   group_name = NULL,   n_hubs = 5,   n_iters = 3,   delta_scale = 0.2,   corr_sigma = 0.05,   n_threads = 4,   use_velocyto = TRUE,   use_graph_tp = FALSE,   layer = \"counts\",   slot = \"counts\",   assay = \"RNA\",   return_delta = FALSE,   wgcna_name = NULL )"},{"path":"https://smorabit.github.io/compact/reference/ModulePerturbation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ModulePerturbation — ModulePerturbation","text":"seurat_obj Seurat object mod Name co-expression module perturb perturb_dir numeric determining type perturbation apply. Negative values knock-, positive knock-, 0 knock-. perturbation_name name -silico perturbation stored Seurat obejct graph Name cell-cell graph Graphs(seurat_obj) group.string containing name column Seurat object cell groups (clusters, cell types, etc). group_name string containing group present provided group.column. character vector can provided select multiple groups time. n_hubs number hub genes perturb selected co-expression module. n_iters number times apply signal propagation. corr_sigma numeric scaling factor correlation matrix. n_threads Number threads correlation calculation slot Slot extract data aggregation. Default = 'counts' assay Assay seurat_obj containing expression information. return_delta Logical indicating whether return \"Delta\" matrix Seurat object. wgcna_name name hdWGCNA experiment seurat_obj@misc slot","code":""},{"path":"https://smorabit.github.io/compact/reference/ModulePerturbation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ModulePerturbation — ModulePerturbation","text":"Seurat object containing -silico perturbation results new assay.","code":""},{"path":"https://smorabit.github.io/compact/reference/ModulePerturbation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ModulePerturbation — ModulePerturbation","text":"Following co-expression network analysis hdWGCNA, ModulePerturbation allows us perform -silico gene expression perturbation analysis. analysis consists several key steps. Apply primary perturbation hub genes selected module. step, model observed gene expression hub genes using zero-inflated negative binomial (ZINB), distributions. simulate new exptession data sampling distribution. simulated expression matrix multiplied perturb_dir, final perturbation expression matrix computed adding observed simulated expression matrices. Apply secondary perturbation rest co-expression module using signal propagation algorithm. Given gene-gene co-expression network hdWGCNA, can propagate perturbation signal throughout network computing dot product network adjacency matrix perturbation expression matrix. can performed several iterations using n_iters. Compute cell-cell transition probabilities.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationTransitions.html","id":null,"dir":"Reference","previous_headings":"","what":"PerturbationTransitions — PerturbationTransitions","title":"PerturbationTransitions — PerturbationTransitions","text":"function computes cell-cell transition probabilities based -silico perturbation experiment.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationTransitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PerturbationTransitions — PerturbationTransitions","text":"","code":"PerturbationTransitions(   seurat_obj,   perturbation_name,   features,   graph,   use_velocyto = TRUE,   use_graph_tp = FALSE,   corr_sigma = 0.05,   n_threads = 4,   layer = \"data\",   slot = \"data\",   assay = \"RNA\" )"},{"path":"https://smorabit.github.io/compact/reference/PerturbationTransitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PerturbationTransitions — PerturbationTransitions","text":"seurat_obj Seurat object perturbation_name name -silico perturbation stored Seurat obejct features Selected features use transition probability calculation graph Name cell-cell graph Graphs(seurat_obj) corr_sigma numeric scaling factor correlation matrix. n_threads Number threads correlation calculation slot Slot extract data aggregation. Default = 'data' assay Assay seurat_obj containing expression information.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationTransitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PerturbationTransitions — PerturbationTransitions","text":"Seurat object cell-cell transition probabilities stored Graphs slot Seurat object.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationVectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","title":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","text":"function calculates transition vectors cells Seurat object based specified perturbation, providing insight cell-state shifts dimensionality-reduced embedding.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationVectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","text":"","code":"PerturbationVectors(   seurat_obj,   perturbation_name,   reduction = \"umap\",   n_threads = 4,   arrow_scale = 1,   max_pct = 0.9 )"},{"path":"https://smorabit.github.io/compact/reference/PerturbationVectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","text":"seurat_obj Seurat object containing single-cell data, including embeddings graphs. perturbation_name character string specifying name perturbation. used retrieve perturbation-specific transition probability graph. reduction character string specifying name dimensional reduction use embedding (default: 'umap'). n_threads integer specifying number threads use parallel processing (default: 4). arrow_scale numeric value scale transition vectors, adjusting length plot (default: 1). max_pct numeric value 0 1 indicating maximum percentile vector lengths display. parameter caps extreme values, limiting outlier vector lengths better visualization (default: 0.90).","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationVectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","text":"list containing two data frames: ars data frame coordinates plotting transition vectors, including initial points (x0, y0) final points (x1, y1) cell. arsd data frame transition vector distances (xd, yd) cell, normalized based max_pct.","code":""},{"path":"https://smorabit.github.io/compact/reference/PerturbationVectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Perturbation Transition Vectors for Cell Embeddings — PerturbationVectors","text":"function retrieves 2D embedding coordinates specified reduction Seurat object. extracts perturbation-specific transition probability graph Seurat object uses calculate transition vectors embArrows_velocyto helper function. Vector lengths scaled arrow_scale capped specified max_pct handle extreme values. Cells NA values either ars arsd excluded final output.","code":""},{"path":"https://smorabit.github.io/compact/reference/PlotTransitionVectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","title":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","text":"function visualizes cell-state transitions Seurat object plotting transition vectors dimensionality-reduced embedding (e.g., UMAP). computes transition vectors based specified perturbation overlays scatter plot cells, allowing insights cell-state shifts following perturbation.","code":""},{"path":"https://smorabit.github.io/compact/reference/PlotTransitionVectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","text":"","code":"PlotTransitionVectors(   seurat_obj,   perturbation_name,   color.by,   reduction = \"umap\",   n_threads = 4,   arrow_scale = 1,   grid_resolution = 25,   max_pct = 0.9,   point_alpha = 0.25,   point_size = 1 )"},{"path":"https://smorabit.github.io/compact/reference/PlotTransitionVectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","text":"seurat_obj Seurat object containing single-cell data, including metadata embeddings. perturbation_name character string specifying name perturbation. used calculate transition vectors based perturbed assay. color.character string indicating metadata column color scatter plot points . reduction character string specifying name dimensional reduction use embedding (default: 'umap'). n_threads integer specifying number threads use parallel processing (default: 4). arrow_scale numeric value scale transition vectors, adjusting length plot (default: 1). grid_resolution integer specifying resolution grid overlaying transition vectors. higher resolution yields finer grid, can provide detailed vector placement (default: 25). max_pct numeric value 0 1 indicating maximum percentile vector lengths display. parameter helps limit display outlier vector lengths, making plot easier interpret (default: 0.90). point_alpha numeric value controlling transparency scatter plot points, 1 fully opaque 0 fully transparent (default: 0.25). point_size numeric value defining size scatter plot points (default: 1).","code":""},{"path":"https://smorabit.github.io/compact/reference/PlotTransitionVectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","text":"ggplot object showing scatter plot cells colored specified metadata overlaid transition vectors indicating cell-state shifts.","code":""},{"path":"https://smorabit.github.io/compact/reference/PlotTransitionVectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Transition Vectors on a Reduced Dimensional Embedding — PlotTransitionVectors","text":"function retrieves embedding coordinates specified dimensional reduction Seurat object. calculates transition vectors using PerturbationVectors, returns vector coordinates (ars) distances (arsd). grid arrows created using grid_vectors, allowing visual simplification transitions grouping vectors grid specified resolution. resulting plot includes scatter plot cells color defined color.arrows showing direction relative magnitude transitions.","code":""},{"path":"https://smorabit.github.io/compact/reference/SampleZINB.html","id":null,"dir":"Reference","previous_headings":"","what":"SampleZINB — SampleZINB","title":"SampleZINB — SampleZINB","text":"function simulated expression values based ZINB model fit gene expression data.","code":""},{"path":"https://smorabit.github.io/compact/reference/SampleZINB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SampleZINB — SampleZINB","text":"","code":"SampleZINB(model, yobs, ncells = NULL)"},{"path":"https://smorabit.github.io/compact/reference/SampleZINB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SampleZINB — SampleZINB","text":"ncells number cells simulate expression values . default simulate data cell input dataset.","code":""},{"path":"https://smorabit.github.io/compact/reference/SampleZINB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SampleZINB — SampleZINB","text":"numeric vector simulated expression data based ZINB model","code":""},{"path":"https://smorabit.github.io/compact/reference/colDeltaCor_knn.html","id":null,"dir":"Reference","previous_headings":"","what":"colDeltaCor_all — colDeltaCor_knn","title":"colDeltaCor_all — colDeltaCor_knn","text":"function calculates cell--cell correlations based observed perturbed gene expression matrices, option limit computations pairs cells connected KNN graph. Correlations computed parallel optimize performance.","code":""},{"path":"https://smorabit.github.io/compact/reference/colDeltaCor_knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colDeltaCor_all — colDeltaCor_knn","text":"","code":"colDeltaCor_knn(   observed_matrix,   delta_matrix,   knn_graph = NULL,   n_cores = detectCores() - 1 )"},{"path":"https://smorabit.github.io/compact/reference/colDeltaCor_knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colDeltaCor_all — colDeltaCor_knn","text":"observed_matrix matrix observed gene expression values (genes cells). delta_matrix matrix perturbed gene expression values (genes cells). knn_graph Optional; adjacency matrix representing k-nearest-neighbor (KNN) graph. provided, correlations pairs cells connected KNN graph computed. n_cores number threads use parallel processing. Defaults detectCores() - 1.","code":""},{"path":"https://smorabit.github.io/compact/reference/colDeltaCor_knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"colDeltaCor_all — colDeltaCor_knn","text":"matrix cell--cell correlation values.","code":""},{"path":"https://smorabit.github.io/compact/reference/colDeltaCor_knn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"colDeltaCor_all — colDeltaCor_knn","text":"colDeltaCor_all calculates cell--cell correlations based variance-stabilized transformed differences observed perturbed gene expression matrices. function computes correlations either cell pairs , KNN graph provided, cells connected graph. primary steps analysis : Variance-stabilizing transformation: cell, observed perturbed expression values transformed reduce variance effects. Cell--cell correlation computation: cell, function calculates correlation values either cells nearest neighbors, defined KNN graph. Parallel processing: Correlations computed parallel optimized performance.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-create_distance_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","title":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","text":"function generates heatmap given matrix. handles matrices data frames (converting matrices needed). also allows customization color palette, axis visibility, legend display.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-create_distance_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","text":"","code":".create_distance_heatmap(   df_matrix,   title,   min_val,   max_val,   custom_palette = NULL,   show_x_axis = TRUE,   show_y_axis = TRUE,   show_legend = TRUE,   custom_order = NULL )"},{"path":"https://smorabit.github.io/compact/reference/dot-create_distance_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","text":"df_matrix numeric matrix data frame converted matrix. title title heatmap. min_val minimum value color scale. max_val maximum value color scale. custom_palette vector colors define color palette. NULL, default palette used. show_x_axis Logical; whether display x-axis labels. Defaults TRUE. show_y_axis Logical; whether display y-axis labels. Defaults TRUE. show_legend Logical; whether display legend. Defaults TRUE. custom_order character vector specifying order clusters x y axes.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-create_distance_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","text":"ggplot2 object representing heatmap.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-create_distance_heatmap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"This function generates a heatmap from a given matrix. It handles both matrices and data frames (converting them to matrices if needed). It also allows customization of the color palette, axis visibility, and legend display. — .create_distance_heatmap","text":"function internal use exported.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":null,"dir":"Reference","previous_headings":"","what":"edist — .edist","title":"edist — .edist","text":"Computes pairwise E-distances Seurat object. Computes E-distance groups Seurat object space given reduction.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"edist — .edist","text":"","code":".edist(   seurat_object,   groupby,   reduction,   sample_correction = FALSE,   verbose = TRUE )"},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"edist — .edist","text":"seurat_object object class Seurat. groupby object class character. Points column Seurat object's meta data contains group labels. reduction object class character. reduction / embedding seurat_object used compute E-distance . Can \"pca\", \"harmony\", linear dimensionality reduction. sample_correction object class logical. TRUE, E-distances corrected sample size. make proper distance, leads negative values. verbose object class logical. TRUE, prints messages. Default TRUE.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"edist — .edist","text":"Returns object class data.frame. group contains E-test p-value E-distance control group.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"edist — .edist","text":"function internal use exported. Computes pairwise E-distances Seurat object. Computes E-distance groups Seurat object space given reduction.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-edist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"edist — .edist","text":"","code":"# Add some code illustrating how to use the function"},{"path":"https://smorabit.github.io/compact/reference/dot-eucldist.html","id":null,"dir":"Reference","previous_headings":"","what":"eucldist — .eucldist","title":"eucldist — .eucldist","text":"Computes Euclidean distance means two groups Seurat object.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-eucldist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"eucldist — .eucldist","text":"","code":".eucldist(seurat_object, groupby, reduction, verbose = TRUE)"},{"path":"https://smorabit.github.io/compact/reference/dot-eucldist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"eucldist — .eucldist","text":"seurat_object object class Seurat. groupby object class character. Points column Seurat object's meta data contains group labels. reduction object class character. reduction / embedding seurat_object used compute means. Can \"pca\", \"harmony\", linear dimensionality reduction. verbose object class logical. TRUE, prints messages. Default TRUE.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-eucldist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"eucldist — .eucldist","text":"Returns object class data.frame containing Euclidean distance pair groups.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-eucldist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"eucldist — .eucldist","text":"function internal use exported. Computes Euclidean distance means two groups Seurat object.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-get_upper_tri.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","title":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","text":"function used internally extract upper triangle matrix. replaces lower triangle input matrix NA, useful working symmetrical matrices distance correlation matrices upper triangle needed.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-get_upper_tri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","text":"","code":".get_upper_tri(cormat)"},{"path":"https://smorabit.github.io/compact/reference/dot-get_upper_tri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","text":"cormat numeric matrix (e.g., correlation distance matrix).","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-get_upper_tri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","text":"matrix NA values lower triangle.","code":""},{"path":"https://smorabit.github.io/compact/reference/dot-get_upper_tri.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"This function is used internally to extract the upper triangle of a matrix. It replaces the lower triangle of the input matrix with NA, which is useful when working with symmetrical matrices such as distance or correlation matrices where only the upper triangle is needed. — .get_upper_tri","text":"function internal use exported.","code":""}]
